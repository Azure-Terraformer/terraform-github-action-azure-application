name: AT-AT-Terraform-Core-Workflow

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
        description: 'Environment to run against'
    secrets:
      TERRAFORM_ARM_CLIENT_ID:
        required: true
      ARM_TENANT_ID:
        required: true
      ARM_SUBSCRIPTION_ID:
        required: true
    outputs:
      plan-status:
        description: 'Status of the Terraform plan'

permissions:
  id-token: write
  contents: read

jobs:
  terraform-plan:
    runs-on: ubuntu-latest

    environment:
      name: ${{ inputs.environment }}

    steps:
    - uses: actions/checkout@v3

    - name: 'Az CLI login'
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.TERRAFORM_ARM_CLIENT_ID }}
        tenant-id: ${{ secrets.ARM_TENANT_ID }}
        subscription-id: ${{ secrets.ARM_SUBSCRIPTION_ID }}

    - id: setup
      name: Setup `terraform`
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ vars.TERRAFORM_VERSION }}

    - id: plan
      name: Terraform Plan
      env:
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
        ARM_CLIENT_ID: ${{ secrets.TERRAFORM_ARM_CLIENT_ID }}
        ARM_USE_OIDC: true
        TF_VAR_application_name: ${{ vars.APPLICATION_NAME }}
        TF_VAR_environment_name: ${{ inputs.environment }}
      working-directory: ${{ vars.TERRAFORM_WORKING_DIRECTORY }}
      run: |
        export ARM_OID_REQUEST_TOKEN=$ACTIONS_ID_TOKEN_REQUEST_TOKEN
        
        terraform init \
          -backend-config="resource_group_name=${{ vars.BACKEND_RESOURCE_GROUP_NAME }}" \
          -backend-config="storage_account_name=${{ vars.BACKEND_STORAGE_ACCOUNT_NAME }}" \
          -backend-config="container_name=${{ vars.BACKEND_STORAGE_CONTAINER_NAME }}" \
          -backend-config="key=${{ vars.APPLICATION_NAME }}-${{ inputs.environment }}"
          
        terraform plan
      outputs:
        plan-status: success